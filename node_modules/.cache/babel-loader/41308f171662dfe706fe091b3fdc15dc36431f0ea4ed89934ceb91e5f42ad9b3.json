{"ast":null,"code":"var _jsxFileName = \"/home/workspace/react-hooks/coding-practices/signin-page/src/components/Login/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    user_email: '',\n    user_password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://syoft.dev/Api/userlogin/api/userlogin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      console.log('Login Response:', result);\n      if (result.success) {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        navigate('/home'); // Redirect to dashboard after successful login\n      } else {\n        console.error('Login failed:', result.message || 'Unknown error');\n        // Handle login failure appropriately\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Handle network or server errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"user_email\",\n        placeholder: \"Email\",\n        value: formData.user_email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"user_password\",\n        placeholder: \"Password\",\n        value: formData.user_password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3K7k3r1hgbtJTfB16O90CV5Zf7U=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","user_email","user_password","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","success","localStorage","setItem","user","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/home/workspace/react-hooks/coding-practices/signin-page/src/components/Login/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    user_email: '',\n    user_password: '',\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('https://syoft.dev/Api/userlogin/api/userlogin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n      console.log('Login Response:', result);\n\n      if (result.success) {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        navigate('/home'); // Redirect to dashboard after successful login\n      } else {\n        console.error('Login failed:', result.message || 'Unknown error');\n        // Handle login failure appropriately\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      // Handle network or server errors\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Log In</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"email\" name=\"user_email\" placeholder=\"Email\" value={formData.user_email} onChange={handleChange} required />\n        <input type=\"password\" name=\"user_password\" placeholder=\"Password\" value={formData.user_password} onChange={handleChange} required />\n        <button type=\"submit\">Log In</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACO,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMmB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,MAAM,CAAC;MAEtC,IAAIA,MAAM,CAACI,OAAO,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACC,MAAM,CAACO,IAAI,CAAC,CAAC;QACzDtB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLiB,OAAO,CAACM,KAAK,CAAC,eAAe,EAAER,MAAM,CAACS,OAAO,IAAI,eAAe,CAAC;QACjE;MACF;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF,CAAC;EAED,oBACE9B,OAAA;IAAKgC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjC,OAAA;MAAAiC,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfrC,OAAA;MAAMsC,QAAQ,EAAEzB,YAAa;MAAAoB,QAAA,gBAC3BjC,OAAA;QAAOuC,IAAI,EAAC,OAAO;QAAC7B,IAAI,EAAC,YAAY;QAAC8B,WAAW,EAAC,OAAO;QAAC7B,KAAK,EAAER,QAAQ,CAACE,UAAW;QAACoC,QAAQ,EAAEjC,YAAa;QAACkC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzHrC,OAAA;QAAOuC,IAAI,EAAC,UAAU;QAAC7B,IAAI,EAAC,eAAe;QAAC8B,WAAW,EAAC,UAAU;QAAC7B,KAAK,EAAER,QAAQ,CAACG,aAAc;QAACmC,QAAQ,EAAEjC,YAAa;QAACkC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrIrC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CAtDID,KAAK;EAAA,QAMQH,WAAW;AAAA;AAAA6C,EAAA,GANxB1C,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}